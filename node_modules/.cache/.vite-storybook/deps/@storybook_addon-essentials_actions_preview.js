import {
  require_v4
} from "./chunk-RV3YVTHE.js";
import {
  require_preview_api
} from "./chunk-5H5OTQLV.js";
import {
  __toESM
} from "./chunk-TFWDKVI3.js";

// node_modules/@storybook/addon-actions/dist/chunk-VWCVBQ22.mjs
var ADDON_ID = "storybook/actions";
var PANEL_ID = `${ADDON_ID}/panel`;
var EVENT_ID = `${ADDON_ID}/action-event`;
var CLEAR_ID = `${ADDON_ID}/action-clear`;

// node_modules/@storybook/addon-actions/dist/chunk-KKE3V3AL.mjs
var import_v4 = __toESM(require_v4(), 1);
var import_preview_api = __toESM(require_preview_api(), 1);
var config = { depth: 10, clearOnStoryChange: true, limit: 50 };
var findProto = (obj, callback) => {
  let proto = Object.getPrototypeOf(obj);
  return !proto || callback(proto) ? proto : findProto(proto, callback);
};
var isReactSyntheticEvent = (e) => Boolean(typeof e == "object" && e && findProto(e, (proto) => /^Synthetic(?:Base)?Event$/.test(proto.constructor.name)) && typeof e.persist == "function");
var serializeArg = (a) => {
  if (isReactSyntheticEvent(a)) {
    let e = Object.create(a.constructor.prototype, Object.getOwnPropertyDescriptors(a));
    e.persist();
    let viewDescriptor = Object.getOwnPropertyDescriptor(e, "view"), view = viewDescriptor == null ? void 0 : viewDescriptor.value;
    return typeof view == "object" && (view == null ? void 0 : view.constructor.name) === "Window" && Object.defineProperty(e, "view", { ...viewDescriptor, value: Object.create(view.constructor.prototype) }), e;
  }
  return a;
};
function action(name, options = {}) {
  let actionOptions = { ...config, ...options }, handler = function(...args) {
    let channel = import_preview_api.addons.getChannel(), id = (0, import_v4.default)(), minDepth = 5, serializedArgs = args.map(serializeArg), normalizedArgs = args.length > 1 ? serializedArgs : serializedArgs[0], actionDisplayToEmit = { id, count: 0, data: { name, args: normalizedArgs }, options: { ...actionOptions, maxDepth: minDepth + (actionOptions.depth || 3), allowFunction: actionOptions.allowFunction || false } };
    channel.emit(EVENT_ID, actionDisplayToEmit);
  };
  return handler.isAction = true, handler;
}

// node_modules/@storybook/addon-actions/dist/preview.mjs
var isInInitialArgs = (name, initialArgs) => typeof initialArgs[name] > "u" && !(name in initialArgs);
var inferActionsFromArgTypesRegex = (context) => {
  let { initialArgs, argTypes, parameters: { actions } } = context;
  if (!actions || actions.disable || !actions.argTypesRegex || !argTypes)
    return {};
  let argTypesRegex = new RegExp(actions.argTypesRegex);
  return Object.entries(argTypes).filter(([name]) => !!argTypesRegex.test(name)).reduce((acc, [name, argType]) => (isInInitialArgs(name, initialArgs) && (acc[name] = action(name)), acc), {});
};
var addActionsFromArgTypes = (context) => {
  let { initialArgs, argTypes, parameters: { actions } } = context;
  return (actions == null ? void 0 : actions.disable) || !argTypes ? {} : Object.entries(argTypes).filter(([name, argType]) => !!argType.action).reduce((acc, [name, argType]) => (isInInitialArgs(name, initialArgs) && (acc[name] = action(typeof argType.action == "string" ? argType.action : name)), acc), {});
};
var argsEnhancers = [addActionsFromArgTypes, inferActionsFromArgTypesRegex];
export {
  argsEnhancers
};
//# sourceMappingURL=@storybook_addon-essentials_actions_preview.js.map
